{"ast":null,"code":"var setUserData = function setUserData(userObj) {\n  return {\n    type: 'SET_USER_DATA',\n    payload: userObj\n  };\n};\n\nexport var loginUser = function loginUser(credentials) {\n  return function (dispatch) {\n    fetch('http://localhost:3000/api/v1/auth/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (resObj) {\n      if (resObj.error == null) {\n        localStorage.setItem(\"token\", resObj.access_token);\n        dispatch(setUserData(resObj.user));\n      } else {\n        alert('Invalid username and password');\n      }\n    });\n  };\n};\nexport var authorizeToken = function authorizeToken(token) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/authorize_token', {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"\".concat(token)\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (userObj) {\n      if (userObj.errors == null) {\n        dispatch(setUserData(userObj));\n      } else {\n        localStorage.removeItem(\"token\");\n      }\n    });\n  };\n};\nexport var signUp = function signUp(credentials) {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/auth/register', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      if (result.message === \"User created successfully\") {\n        alert(\"Acount created Successfully\");\n        return {\n          message: \"Success\"\n        };\n      } else {\n        return {\n          message: \"Fail\",\n          errors: result\n        };\n      }\n    });\n  };\n};\nexport var saveRecipientInfo = function saveRecipientInfo(data) {\n  console.log(data);\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/create/recipients', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      console.log(result);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/src/actions/LoginAndSignUpActions.js"],"names":["setUserData","userObj","type","payload","loginUser","credentials","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","resObj","error","localStorage","setItem","access_token","user","alert","authorizeToken","token","errors","removeItem","signUp","result","message","saveRecipientInfo","data","console","log"],"mappings":"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","sourcesContent":["const setUserData = (userObj) => ({type: 'SET_USER_DATA', payload: userObj})\nexport const loginUser = (credentials) => {\n  return (dispatch) => {\n    fetch(('http://localhost:3000/api/v1/auth/login'), {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials),\n    }).then(res => res.json())\n  .then(resObj => {\n    if (resObj.error == null) {\n      localStorage.setItem(\"token\", resObj.access_token)\n      dispatch(setUserData(resObj.user))\n    } else {\n      alert('Invalid username and password')\n    }\n  })\n}\n}\n\n\nexport const authorizeToken = (token) => {\n  return (dispatch) => {\n    return fetch(('http://localhost:3000/api/v1/authorize_token'), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `${token}`,\n      },\n    }).then(res => res.json())\n      .then(userObj => {\n        if (userObj.errors == null) {\n          dispatch(setUserData(userObj))\n        } else {\n          localStorage.removeItem(\"token\")\n        }\n      })\n  }\n}\n\n\nexport const signUp = (credentials) => {\n  return (dispatch) => {\n    return fetch(('http://localhost:3000/api/v1/auth/register'), {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials),\n    }).then(res => res.json())\n      .then(result => {\n        if (result.message === \"User created successfully\") {\n          alert(\"Acount created Successfully\")\n          return {message: \"Success\"}\n        } else {\n          return {message: \"Fail\", errors: result}\n        }\n      })\n  }\n}\n\nexport const saveRecipientInfo = (data) => {\n  console.log(data)\n  return (dispatch) => {\n    return fetch(('http://localhost:3000/api/v1/create/recipients'), {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data),\n    }).then(res => res.json())\n      .then(result => {\n        console.log(result)\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}