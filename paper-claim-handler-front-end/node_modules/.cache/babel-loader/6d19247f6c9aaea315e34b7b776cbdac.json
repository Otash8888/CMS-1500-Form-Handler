{"ast":null,"code":"import _classCallCheck from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/src/Components/FormComponents/Test.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nvar errorStyle = {\n  position: 'absolute',\n  marginBottom: '-22px',\n  color: 'red'\n};\n\nvar StepByStepExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StepByStepExample, _React$Component);\n\n  function StepByStepExample(props) {\n    var _this;\n\n    _classCallCheck(this, StepByStepExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StepByStepExample).call(this, props));\n    _this.state = {\n      step: 1,\n      data: {},\n      disabled: false,\n      submitted: false\n    };\n    _this.renderStep = _this.renderStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.prevStep = _this.prevStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.nextStep = _this.nextStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validatorListener = _this.validatorListener.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StepByStepExample, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      var data = this.state.data;\n      data[event.target.name] = event.target.value;\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      this.refs.form.submit();\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      this.setState({\n        submitted: true\n      }, function () {\n        setTimeout(function () {\n          return _this2.setState({\n            submitted: false\n          });\n        }, 5000);\n      });\n    }\n  }, {\n    key: \"prevStep\",\n    value: function prevStep() {\n      var _this3 = this;\n\n      var step = this.state.step;\n\n      if (step > 1) {\n        step--;\n      }\n\n      this.setState({\n        step: step\n      }, function () {\n        return _this3.refs.form.walk(_this3.refs.form.childs);\n      });\n    }\n  }, {\n    key: \"nextStep\",\n    value: function nextStep() {\n      var _this4 = this;\n\n      this.props.handleNext();\n\n      if (this.refs.form.walk(this.refs.form.childs)) {\n        var step = this.state.step;\n\n        if (step < 3) {\n          step++;\n        }\n\n        this.setState({\n          step: step\n        }, function () {\n          return _this4.refs.form.walk(_this4.refs.form.childs);\n        });\n      }\n    }\n  }, {\n    key: \"validatorListener\",\n    value: function validatorListener(result) {\n      console.log(result);\n      this.setState({\n        disabled: !result\n      });\n    }\n  }, {\n    key: \"renderStep\",\n    value: function renderStep() {\n      var _this$state = this.state,\n          step = _this$state.step,\n          data = _this$state.data;\n      var content = null;\n\n      switch (step) {\n        case 1:\n          content = React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(TextValidator, {\n            key: 1,\n            name: \"email1\",\n            label: \"email 1\",\n            validators: ['required', 'isEmail'],\n            errorMessages: ['required field', 'invalid email'],\n            value: data.email1,\n            onChange: this.onChange,\n            errorStyle: errorStyle,\n            style: {\n              width: 700\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), React.createElement(TextValidator, {\n            key: 1,\n            name: \"email4\",\n            label: \"email 4\",\n            validators: ['required', 'isEmail'],\n            errorMessages: ['required field', 'invalid email'],\n            value: data.email4,\n            onChange: this.onChange,\n            validatorListener: this.validatorListener,\n            errorStyle: errorStyle,\n            style: {\n              width: 700\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }));\n          break;\n\n        case 2:\n          content = React.createElement(TextValidator, {\n            key: 2,\n            name: \"email2\",\n            label: \"email 2\",\n            validators: ['required', 'isEmail'],\n            errorMessages: ['required field', 'invalid email'],\n            value: data.email2,\n            onChange: this.onChange,\n            validatorListener: this.validatorListener,\n            errorStyle: errorStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          });\n          break;\n\n        case 3:\n          content = React.createElement(TextValidator, {\n            key: 3,\n            name: \"email3\",\n            label: \"email 3\",\n            validators: ['required', 'isEmail'],\n            errorMessages: ['required field', 'invalid email'],\n            value: data.email3,\n            onChange: this.onChange,\n            validatorListener: this.validatorListener,\n            errorStyle: errorStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          });\n          break;\n      }\n\n      return content;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          step = _this$state2.step,\n          disabled = _this$state2.disabled,\n          submitted = _this$state2.submitted;\n      return React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        instantValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Step-by-step\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), this.renderStep(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Button, {\n        raised: true,\n        onClick: this.prevStep,\n        style: {\n          marginRight: '16px'\n        },\n        primary: true,\n        disabled: step === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"previous\"), React.createElement(Button, {\n        raised: true,\n        onClick: step < 3 ? this.nextStep : this.submit,\n        primary: true,\n        disabled: disabled || submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, submitted && 'Your form is submitted!' || (step < 3 ? 'Next' : 'Submit')));\n    }\n  }]);\n\n  return StepByStepExample;\n}(React.Component);\n\nexport { StepByStepExample as default };","map":{"version":3,"sources":["/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/src/Components/FormComponents/Test.js"],"names":["React","Button","ValidatorForm","TextValidator","errorStyle","position","marginBottom","color","StepByStepExample","props","state","step","data","disabled","submitted","renderStep","bind","handleSubmit","submit","prevStep","nextStep","validatorListener","onChange","event","target","name","value","setState","refs","form","setTimeout","walk","childs","handleNext","result","console","log","content","email1","width","email4","email2","email3","marginRight","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst errorStyle = {\n    position: 'absolute',\n    marginBottom: '-22px',\n    color: 'red',\n};\n\nexport default class StepByStepExample extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            step: 1,\n            data: {},\n            disabled: false,\n            submitted: false,\n        };\n        this.renderStep = this.renderStep.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.submit = this.submit.bind(this);\n        this.prevStep = this.prevStep.bind(this);\n        this.nextStep = this.nextStep.bind(this);\n        this.validatorListener = this.validatorListener.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(event) {\n        const { data } = this.state;\n        data[event.target.name] = event.target.value;\n        this.setState({ data });\n    }\n\n    submit() {\n        this.refs.form.submit();\n    }\n\n    handleSubmit() {\n        this.setState({ submitted: true }, () => {\n            setTimeout(() => this.setState({ submitted: false }), 5000);\n        });\n    }\n\n    prevStep() {\n        let step = this.state.step;\n        if (step > 1) {\n            step--;\n        }\n        this.setState({ step }, () => this.refs.form.walk(this.refs.form.childs));\n    }\n\n    nextStep() {\n        this.props.handleNext()\n        if (this.refs.form.walk(this.refs.form.childs)) {\n            let step = this.state.step;\n            if (step < 3) {\n                step++;\n            }\n            this.setState({ step }, () => this.refs.form.walk(this.refs.form.childs));\n        }\n    }\n\n    validatorListener(result) {\n        console.log(result);\n        this.setState({ disabled: !result });\n    }\n\n    renderStep() {\n        const { step, data } = this.state;\n        let content = null;\n        switch (step) {\n            case 1:\n                content = (\n                    < React.Fragment>\n                    <TextValidator\n                        key={1}\n                        name=\"email1\"\n                        label=\"email 1\"\n                        validators={['required', 'isEmail']}\n                        errorMessages={['required field', 'invalid email']}\n                        value={data.email1}\n                        onChange={this.onChange}\n                        \n                        errorStyle={errorStyle}\n                        style={{width:700}}\n                    />\n                    < br/ >\n                    <TextValidator\n                        key={1}\n                        name=\"email4\"\n                        label=\"email 4\"\n                        validators={['required', 'isEmail']}\n                        errorMessages={['required field', 'invalid email']}\n                        value={data.email4}\n                        onChange={this.onChange}\n                        validatorListener={this.validatorListener}\n                        errorStyle={errorStyle}\n                        style={{width:700}}\n                    />\n                    </React.Fragment>\n                );\n                break;\n            case 2:\n                content = (\n                    <TextValidator\n                        key={2}\n                        name=\"email2\"\n                        label=\"email 2\"\n                        validators={['required', 'isEmail']}\n                        errorMessages={['required field', 'invalid email']}\n                        value={data.email2}\n                        onChange={this.onChange}\n                        validatorListener={this.validatorListener}\n                        errorStyle={errorStyle}\n                    />);\n                break;\n            case 3:\n                content = (\n                    <TextValidator\n                        key={3}\n                        name=\"email3\"\n                        label=\"email 3\"\n                        validators={['required', 'isEmail']}\n                        errorMessages={['required field', 'invalid email']}\n                        value={data.email3}\n                        onChange={this.onChange}\n                        validatorListener={this.validatorListener}\n                        errorStyle={errorStyle}\n                    />);\n                break;\n        }\n        return content;\n    }\n\n    render() {\n        const { step, disabled, submitted } = this.state;\n        return (\n            <ValidatorForm\n                ref=\"form\"\n                onSubmit={this.handleSubmit}\n                instantValidate\n            >\n                <h2>Step-by-step</h2>\n                <br />\n                {this.renderStep()}\n                <br />\n                <br />\n                <br />\n                <Button\n                    raised\n                    onClick={this.prevStep}\n                    style={{ marginRight: '16px' }}\n                    primary\n                    disabled={step === 1}\n                >\n                    previous\n                </Button>\n                <Button\n                    raised\n                    onClick={step < 3 ? this.nextStep : this.submit}\n                    primary\n                    disabled={disabled || submitted}\n                >\n                    {\n                        (submitted && 'Your form is submitted!') ||\n                        (step < 3 ? 'Next' : 'Submit')\n                    }\n                </Button>\n            </ValidatorForm>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}