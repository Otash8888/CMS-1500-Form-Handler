{"ast":null,"code":"import _classCallCheck from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/src/Components/FormComponents/PatientConditions.js\";\nimport React from 'react';\nimport TextField from 'material-ui/TextField';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { usStates } from '../../dataLists';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    button: {\n      display: 'block',\n      marginTop: theme.spacing.unit * 2\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 700\n    }\n  };\n};\n\nvar PatientConditions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientConditions, _React$Component);\n\n  function PatientConditions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PatientConditions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PatientConditions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      empOpen: false,\n      autoOpen: false,\n      otherOpen: false\n    };\n\n    _this.handleCloseEmp = function () {\n      _this.setState({\n        empOpen: false\n      });\n    };\n\n    _this.handleOpenEmp = function () {\n      _this.setState({\n        empOpen: true\n      });\n    };\n\n    _this.handleCloseAuto = function () {\n      _this.setState({\n        autoOpen: false\n      });\n    };\n\n    _this.handleOpenAuto = function () {\n      _this.setState({\n        autoOpen: true\n      });\n    };\n\n    _this.handleCloseOther = function () {\n      _this.setState({\n        otherOpen: false\n      });\n    };\n\n    _this.handleOpenOther = function () {\n      _this.setState({\n        otherOpen: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PatientConditions, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          page3 = _this$props.page3,\n          handleChange = _this$props.handleChange,\n          handleChangeDropDown = _this$props.handleChangeDropDown,\n          mainState = _this$props.mainState;\n      var usaStates = usStates();\n      console.log(\"inside Raddress render\"); // debugger\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Employment? (Current or Privious)\"), React.createElement(Select, {\n        \"data-category\": \"recipient\",\n        open: this.state.empOpen,\n        onClose: this.handleCloseEmp,\n        onOpen: this.handleOpenEmp,\n        value: mainState[\"10_a\"],\n        onChange: handleChangeDropDown,\n        inputProps: {\n          name: '10_a',\n          id: 'demo-controlled-open-select',\n          category: \"recipient\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Please select ...\")), React.createElement(MenuItem, {\n        value: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Male\"), React.createElement(MenuItem, {\n        value: \"no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Female\")))));\n    }\n  }]);\n\n  return PatientConditions;\n}(React.Component);\n\nPatientConditions.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PatientConditions);","map":{"version":3,"sources":["/Users/otash/Flatiron/MOD5/project/paper-claim-handler-front-end/src/Components/FormComponents/PatientConditions.js"],"names":["React","TextField","PropTypes","withStyles","usStates","InputLabel","MenuItem","FormControl","Select","Button","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","button","marginTop","formControl","margin","minWidth","PatientConditions","state","empOpen","autoOpen","otherOpen","handleCloseEmp","setState","handleOpenEmp","handleCloseAuto","handleOpenAuto","handleCloseOther","handleOpenOther","props","classes","page3","handleChange","handleChangeDropDown","mainState","usaStates","console","log","name","id","category","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TextField from 'material-ui/TextField';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { usStates,  } from '../../dataLists';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 700,\n  }\n\n});\n\n\nclass PatientConditions extends React.Component {\n  state = {\n    empOpen:false,\n    autoOpen:false,\n    otherOpen:false\n  }\n\n  handleCloseEmp = () => {\n    this.setState({ empOpen: false });\n  };\n\n  handleOpenEmp = () => {\n    this.setState({ empOpen: true });\n  };\n  handleCloseAuto = () => {\n    this.setState({ autoOpen: false });\n  };\n\n  handleOpenAuto = () => {\n    this.setState({ autoOpen: true });\n  };\n  handleCloseOther = () => {\n    this.setState({ otherOpen: false });\n  };\n\n  handleOpenOther = () => {\n    this.setState({ otherOpen: true });\n  };\n\n  render(){\n    const { classes, page3, handleChange, handleChangeDropDown,  mainState } = this.props\n    const usaStates = usStates()\n    console.log(\"inside Raddress render\")\n    // debugger\n\n    return (\n        <React.Fragment>\n          <form autoComplete=\"off\">\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"demo-controlled-open-select\">Employment? (Current or Privious)</InputLabel>\n                <Select\n                  data-category={\"recipient\"}\n                  open={this.state.empOpen}\n                  onClose={this.handleCloseEmp}\n                  onOpen={this.handleOpenEmp}\n                  value={mainState[\"10_a\"]}\n                  onChange={handleChangeDropDown}\n                  inputProps={{\n                    name: '10_a',\n                    id: 'demo-controlled-open-select',\n                    category:\"recipient\"\n                  }}\n                >\n                  <MenuItem value=\"\">\n                    <em>Please select ...</em>\n                  </MenuItem>\n                  <MenuItem value={\"yes\"}>Male</MenuItem>\n                  <MenuItem value={\"no\"}>Female</MenuItem>\n                </Select>\n              </FormControl>\n            </form>\n        </React.Fragment>\n\n    )\n   }\n  }\n  PatientConditions.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\n\nexport default withStyles(styles)(PatientConditions)\n"]},"metadata":{},"sourceType":"module"}